- name: Run koji containers on openshift
  hosts: localhost
  vars:
    # This is a constant, please do not override
    koji_components:
      - koji-base
      - koji-client
      - koji-builder
      - koji-db
      - koji-hub

  pre_tasks:
    - name: Check if we are logged in as openshift admin
      command: oc whoami
      register: whoami
      changed_when: false

    - name: Login as openshift admin
      command: oc login -u system:admin
      changed_when: whoami.stdout != 'system:admin'

    - name: Make sure osbs-box data directory exists
      file:
        path: "{{ osbs_box_data_dir }}"
        state: directory

  tasks:
    - name: Create koji namespace in openshift
      command: oc create namespace "{{ koji_namespace }}"
      register: create_koji_namespace
      failed_when: create_koji_namespace.rc != 0
                   and "already exists" not in create_koji_namespace.stderr
      changed_when: create_koji_namespace.rc == 0

    - name: Create koji-certs secret in the koji namespace
      shell:
        set -o pipefail;
        oc create secret generic koji-certs --from-file "{{ koji_certs_final }}"
                                            --dry-run
                                            --output json |
        oc --namespace "{{ koji_namespace }}" replace --force -f -
      changed_when: true

    - name: Copy openshift templates for koji components to osbs-box data dir
      copy:
        src: "openshift/{{ item }}.yaml"
        dest: "{{ osbs_box_data_dir }}/{{ item }}.yaml"
      loop:
        "{{ koji_components }}"

    - name: Process parameters file and put it in osbs-box data dir
      template:
        src: openshift/osbs-box.env.j2
        dest: "{{ osbs_box_data_dir }}/osbs-box.env"

    - name: Create openshift resources for all koji components
      shell:
        set -o pipefail;
        oc process -f "{{ osbs_box_data_dir }}/{{ item }}.yaml"
                   --param-file "{{ osbs_box_data_dir }}/osbs-box.env"
                   --ignore-unknown-parameters |
        oc --namespace "{{ koji_namespace }}" apply -f -
      loop:
        "{{ koji_components }}"
      changed_when: true

    - name: Allow containers to run as root
      command:
        oc --namespace "{{ koji_namespace }}" adm policy add-scc-to-user anyuid
           --serviceaccount default
      changed_when: true

    - name: Build (and automatically deploy) koji components
      command: oc --namespace "{{ koji_namespace }}" start-build koji-base
      changed_when: true
