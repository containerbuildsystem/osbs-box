# Generate all certificates for OSBS-Box
---
## CA certificate
- block:
    - name: Get CA certificate info
      openssl_certificate_info:
        path: "{{ certificates_dir }}/osbs-box-ca.crt"
      ignore_errors: true
      register: ca_info

    - name: Check if CA certificate is valid
      assert:
        that:
          - not ca_info.failed
          - not ca_info.expired
      ignore_errors: true
      register: ca_check

- block:
    - name: Generate CA private key
      openssl_privatekey:
        path: "{{ certificates_dir }}/osbs-box-ca.key"

    - name: Generate CA CSR
      openssl_csr:
        path: "{{ certificates_dir }}/osbs-box-ca.csr"
        privatekey_path: "{{ certificates_dir }}/osbs-box-ca.key"
        common_name: OSBS-Box
        basic_constraints:
          - "CA:TRUE"

    - name: Self-sign CA CSR
      openssl_certificate:
        provider: selfsigned
        selfsigned_not_after: +365d
        path: "{{ certificates_dir }}/osbs-box-ca.crt"
        csr_path: "{{ certificates_dir }}/osbs-box-ca.csr"
        privatekey_path: "{{ certificates_dir }}/osbs-box-ca.key"
        # Generate the certificate even if it already exists,
        # otherwise an expired certificate would not be overwritten
        force: true
  when: ca_check.failed

## Koji certificates
- name: Generate certificates for all koji components
  include_tasks: generate-ownca-cert.yaml
  vars:
    dir: "{{ koji_certs_dir }}"
    cert: "{{ item }}"
    ca:
      crt_path: "{{ certificates_dir }}/osbs-box-ca.crt"
      key_path: "{{ certificates_dir }}/osbs-box-ca.key"
    # If CA certificate changed, recreate everything
    force: "{{ ca_check.failed }}"
  loop:
    - name: koji-hub
      subject_alt_name:
        - "DNS:localhost"   # Same pod
        - "DNS:koji-hub"  # Different pod in the same namespace
        - "DNS:koji-hub.{{ koji_namespace }}"   # Pod in different namespace
        - "DNS:koji-hub.{{ osbs_box_host }}"  # External route
    - name: kojiweb
    - name: kojibuilder
    - name: kojiadmin
    - name: kojiosbs

- block:
    - name: Combine private keys with koji certificates, save as .pem files
      assemble:
        dest: "{{ koji_certs_dir }}/{{ item }}.pem"
        src: "{{ koji_certs_dir }}"
        regexp: "{{ item }}\\.(crt|key)"
      loop:
        "{{ koji_client_certs }}"

    - name: Generate PKCS#12 browser certificates for koji users
      openssl_pkcs12:
        path: "{{ koji_certs_dir }}/{{ item }}.p12"
        privatekey_path: "{{ koji_certs_dir }}/{{ item }}.key"
        certificate_path: "{{ koji_certs_dir }}/{{ item }}.crt"
        friendly_name: "{{ item }}"
      loop:
        "{{ koji_client_certs }}"
  vars:
    koji_client_certs:
      - kojiweb
      - kojibuilder
      - kojiadmin
      - kojiosbs

## Registry certificate
- name: Generate registry certificate
  include_tasks: generate-ownca-cert.yaml
  vars:
    dir: "{{ registry_certs_dir }}"
    cert:
      name: osbs-registry
      subject_alt_name:
        - "DNS:localhost"
        - "DNS:osbs-registry"
        - "DNS:osbs-registry.{{ registry_namespace }}"
        - "DNS:osbs-registry.{{ osbs_box_host }}"
    ca:
      crt_path: "{{ certificates_dir }}/osbs-box-ca.crt"
      key_path: "{{ certificates_dir }}/osbs-box-ca.key"
    force: "{{ ca_check.failed }}"
