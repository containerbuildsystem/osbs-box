- name: Generate koji certificates
  hosts: localhost
  vars:
    # This is a constant, please do not override
    koji_client_certs:
      - kojiadmin
      - kojiosbs
      - kojibuilder
      - kojiweb

  pre_tasks:
    - name: Make sure python-cryptography package is installed
      package:
        name: "python{{ ansible_python.version.major }}-cryptography"
        state: present
      when: allow_pkg_install
      become: true

    - name: Make sure koji certificate directories exist
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ koji_certs_work }}"
        - "{{ koji_certs_final }}"

  tasks:
    - name: Generate CA private key
      openssl_privatekey:
        path: "{{ koji_certs_work }}/koji-ca.key"

    - name: Generate CA CSR
      openssl_csr:
        path: "{{ koji_certs_work }}/koji-ca.csr"
        privatekey_path: "{{ koji_certs_work }}/koji-ca.key"
        common_name: koji-ca
        basic_constraints:
          - "CA:TRUE"

    - name: Self-sign CA CSR
      openssl_certificate:
        provider: selfsigned
        selfsigned_not_after: +365d
        path: "{{ koji_certs_final }}/koji-ca.crt"
        csr_path: "{{ koji_certs_work }}/koji-ca.csr"
        privatekey_path: "{{ koji_certs_work }}/koji-ca.key"
        # Generate the certificate even if it already exists,
        # otherwise an expired certificate would not be overwritten
        force: true

    - name: Generate koji-hub private key
      openssl_privatekey:
        path: "{{ koji_certs_final }}/koji-hub.key"

    - name: Generate koji-hub CSR
      openssl_csr:
        path: "{{ koji_certs_work }}/koji-hub.csr"
        privatekey_path: "{{ koji_certs_final }}/koji-hub.key"
        common_name: koji-hub
        subject_alt_name:
          - "DNS:localhost"   # Same pod
          - "DNS:koji-hub"  # Different pod in the same namespace
          - "DNS:koji-hub.{{ koji_namespace }}"   # Pod in different namespace
          - "DNS:koji-hub.{{ osbs_box_host }}"  # External route

    - name: Sign koji-hub CSR
      openssl_certificate:
        provider: ownca
        ownca_not_after: +365d
        path: "{{ koji_certs_final }}/koji-hub.crt"
        csr_path: "{{ koji_certs_work }}/koji-hub.csr"
        ownca_path: "{{ koji_certs_final }}/koji-ca.crt"
        ownca_privatekey_path: "{{ koji_certs_work }}/koji-ca.key"
        force: true

    - name: Generate client private keys
      openssl_privatekey:
        path: "{{ koji_certs_work }}/{{ item }}.key"
      loop:
        "{{ koji_client_certs }}"

    - name: Generate client CSRs
      openssl_csr:
        path: "{{ koji_certs_work }}/{{ item }}.csr"
        privatekey_path: "{{ koji_certs_work }}/{{ item }}.key"
        common_name: "{{ item }}"
      loop:
        "{{ koji_client_certs }}"

    - name: Sign client CSRs
      openssl_certificate:
        provider: ownca
        ownca_not_after: +365d
        path: "{{ koji_certs_work }}/{{ item }}.crt"
        csr_path: "{{ koji_certs_work }}/{{ item }}.csr"
        ownca_path: "{{ koji_certs_final }}/koji-ca.crt"
        ownca_privatekey_path: "{{ koji_certs_work }}/koji-ca.key"
        force: true
      loop:
        "{{ koji_client_certs }}"

    - name: Append private keys to client certificates, save as .pem files
      assemble:
        dest: "{{ koji_certs_final }}/{{ item }}.pem"
        src: "{{ koji_certs_work }}"
        regexp: "{{ item }}\\.(crt|key)"
      loop:
        "{{ koji_client_certs }}"

    - name: Generate PKCS#12 client certificates for browsers
      openssl_pkcs12:
        path: "{{ koji_certs_final }}/{{ item }}.p12"
        privatekey_path: "{{ koji_certs_work }}/{{ item }}.key"
        certificate_path: "{{ koji_certs_work }}/{{ item }}.crt"
        friendly_name: "{{ item }}"
      loop:
        "{{ koji_client_certs }}"
